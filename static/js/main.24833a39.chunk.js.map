{"version":3,"sources":["utils/index.js","panels/events/components/stub/Stub.jsx","utils/admin/index.js","panels/events/components/header/AppHeaderIcon.jsx","panels/events/components/header/AppHeader.jsx","panels/events/event-flow/EventFlow.jsx","panels/events/admin/utils/api.js","panels/events/admin/list/utils.js","panels/events/admin/list/EventsAdmin.jsx","companents/menu/AppTabbar.jsx","panels/events/admin/add/utils.js","panels/events/admin/add/AddEventsAdmin.jsx","App.js","index.js"],"names":["bemHelper","name","BEMHelper","prefix","modifierDelimiter","outputIsString","bem","Stub","react","react_fontawesome_index_es","Object","assign","icon","spin","size","isAdmin","user","env","process","adminId","REACT_APP_ADMIN_USER_ID","id","parseInt","AppHeaderIcon","p","props","AppHeader","_useState","useState","_useState2","slicedToArray","isOpenHeadContext","setOpenHeadContext","dist_vkui","aside","dropdown_default","a","onClick","children","opened","onClose","go","asideContent","active","done_default","fill","before","header_AppHeaderIcon","EventFlow","centered","header_AppHeader","stub_Stub","baseUrl","getEvents","_getEvents","apply","this","arguments","_callee","regenerator_default","wrap","_context","prev","next","axios","get","abrupt","sent","data","stop","EventsAdmin","events","setEvents","_useState3","_useState4","loading","setLoading","updateEvents","_ref","asyncToGenerator","mark","res","useEffect","token","connect","send","app_id","scope","then","catch","console","error","PanelSpinner_default","add_default","map","e","key","concat","_id","expandable","time","AppTabbar","selected","data-story","text","newsfeed_default","user_default","postEvents","_x","_postEvents","event","post","AddEventsAdmin","_React$useState","React","_React$useState2","setName","_React$useState3","_React$useState4","price","setPrice","_React$useState5","_React$useState6","setTime","_React$useState7","_React$useState8","days","setDays","sendEvents","onCheck","day","_ref2","_callee2","_context2","currentTarget","checked","includes","toConsumableArray","filter","d","eventHandler","type","value","test","log","top","onChange","JSON","stringify","App","activePanel","setActivePanel","activeStory","setActiveStory","_useState5","_useState6","currentUser","setCurrentUser","_useState7","_useState8","setToken","subscribe","detail","access_token","tabbar","menu_AppTabbar","event_flow_EventFlow","list_EventsAdmin","add_AddEventsAdmin","library","add","faCircleNotch","faUserCog","faUser","faRss","root","document","getElementById","ReactDOM","render","react_default","createElement","src_App"],"mappings":"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","file":"static/js/main.24833a39.chunk.js","sourcesContent":["// @flow\n\nimport BEMHelper from \"react-bem-helper\";\n\nexport const bemHelper = (name: string) => {\n  return new BEMHelper({\n                         name,\n                         prefix           : \"\",\n                         modifierDelimiter: \"_\",\n                         outputIsString   : false\n                       })\n};","// @flow\n\nimport './styles.scss'\n\nimport * as React               from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bemHelper }       from \"../../../../utils\";\n\nconst bem = bemHelper(\"stub\");\n\n\nconst Stub = () => {\n  return (\n    <div {...bem()}>\n      <FontAwesomeIcon {...bem(\"spinner\")} icon=\"circle-notch\" spin size=\"4x\" />\n    </div>\n  );\n};\n\nexport default Stub;\n","// @flow\n\nimport type { VKWebAppGetUserInfoResult } from \"../../types/vk\";\n\nexport const isAdmin = (user: ?VKWebAppGetUserInfoResult) => {\n  const env = process.env;\n  if ('REACT_APP_ADMIN_USER_ID' in env) {\n    const adminId = env.REACT_APP_ADMIN_USER_ID;\n    return !!user && !!adminId && user.id === parseInt(adminId)\n  }\n  return false\n};","// @flow\n\nimport * as React          from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BEMHelper           from \"react-bem-helper\";\nimport { IconProp }        from \"@fortawesome/fontawesome-svg-core\";\n\ntype Props = {\n  icon: IconProp,\n  bem?: BEMHelper\n};\n\nconst AppHeaderIcon = (p: Props) => {\n  const props = !!p.bem ? p.bem(\"header-context-menu-icon\", \"\", \"Icon\") : {};\n  return (\n    <span {...props}>\n      <FontAwesomeIcon icon={p.icon} />\n    </span>\n  );\n};\n\nexport default AppHeaderIcon;\n","// @flow\nimport \"./styles.scss\";\n\nimport * as React from \"react\";\nimport {\n  Cell,\n  HeaderContext,\n  List,\n  PanelHeader,\n  PanelHeaderContent\n} from \"@vkontakte/vkui\";\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\nimport Icon24Done from \"@vkontakte/icons/dist/24/done\";\nimport { bemHelper } from \"../../../../utils\";\nimport { useState } from \"react\";\nimport AppHeaderIcon from \"./AppHeaderIcon\";\n\nconst bem = bemHelper(\"app-header\");\n\ntype Props = {\n  active: string,\n  children?: React.Node,\n  isAdmin?: boolean,\n  go: string => any\n};\n\nconst AppHeader = (p: Props) => {\n  const [isOpenHeadContext, setOpenHeadContext] = useState(false);\n\n  return (\n    <>\n      <PanelHeader>\n        {p.isAdmin ? (\n          <PanelHeaderContent\n            aside={<Icon16Dropdown />}\n            onClick={() => setOpenHeadContext(!isOpenHeadContext)}\n          >\n            {p.children}\n          </PanelHeaderContent>\n        ) : (\n          p.children\n        )}\n      </PanelHeader>\n      {p.isAdmin && (\n        <HeaderContext opened={isOpenHeadContext} onClose={() => {}}>\n          <List>\n            <Cell\n              onClick={() => p.go(\"events-feed\")}\n              asideContent={\n                p.active === \"events-feed\" ? (\n                  <Icon24Done fill=\"var(--accent)\" />\n                ) : null\n              }\n              before={<AppHeaderIcon bem={bem} icon=\"rss\" />}\n            >\n              Расписание\n            </Cell>\n            <Cell\n              onClick={() => p.go(\"events-admin\")}\n              before={<AppHeaderIcon bem={bem} icon=\"user-cog\" />}\n              asideContent={\n                p.active === \"events-admin\" ? (\n                  <Icon24Done fill=\"var(--accent)\" />\n                ) : null\n              }\n            >\n              Администрирование\n            </Cell>\n          </List>\n        </HeaderContext>\n      )}\n    </>\n  );\n};\n\nexport default AppHeader;\n","// @flow\nimport \"./styles.scss\";\n\nimport * as React                         from \"react\";\nimport { Panel, Group, Div }              from \"@vkontakte/vkui\";\nimport type { VKWebAppGetUserInfoResult } from \"../../../types/vk\";\nimport Stub                               from \"../components/stub/Stub\";\nimport { isAdmin }                        from \"../../../utils/admin\";\nimport { bemHelper }                      from \"../../../utils\";\nimport AppHeader                          from \"../components/header/AppHeader\";\n\nconst bem = bemHelper(\"event-flow\");\n\ntype Props = {\n  id: string,\n  user: ?VKWebAppGetUserInfoResult,\n  go: string => any\n};\n\nconst EventFlow = (p: Props) => {\n\n  return (\n    <>\n      <Panel id={p.id} centered={!p.user}>\n        <AppHeader active={p.id} isAdmin={isAdmin(p.user)}  go={p.go}>\n          Расписание\n        </AppHeader>\n        {!p.user && <Stub />}\n        {isAdmin(p.user) && (\n          <Group>\n            <Div>Admin</Div>\n          </Group>\n        )}\n        {p.user && !isAdmin(p.user) && (\n          <Group>\n            <Div>User</Div>\n          </Group>\n        )}\n      </Panel>\n    </>\n  );\n};\n\nexport default EventFlow;\n","// @flow\n\nimport connect                  from '@vkontakte/vkui-connect-promise';\nimport { lwzEncode, lzwDecode } from \"../../../../utils/lwz\";\n\nexport const storageGetEvent = async (access_token: string): Promise<string> => {\n  const res = await connect.send(\"VKWebAppCallAPIMethod\", {\n    method: \"storage.get\",\n    request_id: \"EVENTS\",\n    params: {\n      key: \"events\",\n      global: 1,\n      v:\"5.101\",\n      access_token\n    }\n  });\n  try{\n    return JSON.parse(lzwDecode(res.data.response));\n  } catch {\n    return []\n  }\n};\n\nexport const storageSetEvent = async (events: any, access_token: string): Promise<void> => {\n  await connect.send(\"VKWebAppCallAPIMethod\", {\n    method: \"storage.set\",\n    request_id: \"EVENTS\",\n    params: {\n      key: \"events\",\n      global: 1,\n      v:\"5.101\",\n      value: lwzEncode(JSON.stringify(events)),\n      access_token\n    }\n  })\n};","// @flow\nimport axios from 'axios';\n\nconst baseUrl = 'http://45.86.180.13:3000';\n\nexport async function getEvents() {\n  return (await axios.get(baseUrl+'/events')).data;\n}","// @flow\n\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { bemHelper } from \"../../../../utils\";\nimport type { VKWebAppGetUserInfoResult } from \"../../../../types/vk\";\nimport { Panel, Group, CellButton, Div } from \"@vkontakte/vkui\";\nimport { List, Cell } from \"@vkontakte/vkui\";\nimport { isAdmin } from \"../../../../utils/admin\";\nimport AppHeader from \"../../components/header/AppHeader\";\nimport Icon24Add from \"@vkontakte/icons/dist/24/add\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport { storageGetEvent, storageSetEvent } from \"../utils/api\";\nimport { getEvents } from \"./utils\";\nimport PanelSpinner from '@vkontakte/vkui/dist/components/PanelSpinner/PanelSpinner';\n\nconst bem = bemHelper(\"admin-main\");\n\ntype Props = {\n  id: string,\n  user: ?VKWebAppGetUserInfoResult,\n  token: ?string,\n  go: string => any\n};\n\nconst EventsAdmin = (p: Props) => {\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const updateEvents = async () => {\n    const res = await getEvents();\n    setEvents(res);\n  };\n\n  useEffect(() => {\n    p.user &&\n      !p.token &&\n      connect.send(\"VKWebAppGetAuthToken\", {\n        app_id: 7062331,\n        scope: \"groups,stats\"\n      });\n  }, [p.user, p.token]);\n\n  useEffect(() => {\n    setLoading(true);\n    updateEvents()\n      .then(() => setLoading(false))\n      .catch(console.error);\n  }, []);\n\n  return (\n    <Panel id={p.id}>\n      <AppHeader active={p.id} isAdmin={isAdmin(p.user)} go={p.go}>\n        События-Настройки\n      </AppHeader>\n      {loading && <PanelSpinner />}\n      {!loading && (\n        <>\n          <Group>\n            <CellButton\n              onClick={() => p.go(\"add-events-admin\")}\n              before={<Icon24Add />}\n            >\n              Добавить новое событие\n            </CellButton>\n          </Group>\n          <Group>\n            <List>\n              {events.map(e => (\n                <Cell key={`event-${e._id}`} expandable><b>{e.name}</b> начало в {e.time}</Cell>\n              ))}\n            </List>\n          </Group>\n        </>\n      )}\n    </Panel>\n  );\n};\n\nexport default EventsAdmin;\n","// @flow\n\nimport * as React             from \"react\";\nimport { TabbarItem, Tabbar } from \"@vkontakte/vkui\";\nimport NewsfeedIcon           from \"@vkontakte/icons/dist/28/newsfeed\";\nimport UserIcon               from \"@vkontakte/icons/dist/28/user.js\";\n\ntype Props = {\n  active: string,\n  go: string => any\n}\n\nconst AppTabbar = (p: Props) => {\n  return (\n    <Tabbar>\n      <TabbarItem\n        onClick={() => p.go('events')}\n        selected={p.active === 'events'}\n        data-story=\"events\"\n        text=\"События\"\n      >\n        <NewsfeedIcon />\n      </TabbarItem>\n      <TabbarItem\n        onClick={() => p.go('user')}\n        selected={p.active === 'user'}\n        data-story=\"users\"\n        text=\"Личный кабинет\"\n      >\n        <UserIcon />\n      </TabbarItem>\n    </Tabbar>\n  );\n};\n\nexport default AppTabbar","// @flow\n\nimport axios from \"axios\";\n\nconst baseUrl = 'http://45.86.180.13:3000';\n\nexport async function postEvents(event: any) {\n  return await axios.post(baseUrl + '/events', event)\n}","// @flow\n\nimport * as React                            from \"react\";\nimport AppHeader                             from \"../../components/header/AppHeader\";\nimport { isAdmin }                           from \"../../../../utils/admin\";\nimport { Cell, Div, Panel }                  from \"@vkontakte/vkui\";\nimport type { VKWebAppGetUserInfoResult }    from \"../../../../types/vk\";\nimport { FormLayout, Input }                 from \"@vkontakte/vkui\";\nimport { Checkbox, FormLayoutGroup, Button } from \"@vkontakte/vkui\";\nimport { storageGetEvent, storageSetEvent }  from \"../utils/api\";\nimport { postEvents }                        from \"./utils\";\n\ntype Props = {\n  id: string,\n  user: ?VKWebAppGetUserInfoResult,\n  token: ?string,\n  go: string => any\n};\n\nconst AddEventsAdmin = (p: Props) => {\n  const [name, setName] = React.useState(''),\n        [price, setPrice] = React.useState<string>(''),\n        [time, setTime] = React.useState('17:00'),\n        [days, setDays] = React.useState<number[]>([]);\n\n  const sendEvents = async () => {\n    const event = {name, price, time, days};\n    await postEvents(event);\n    p.go(\"events-admin\");\n  };\n\n  const onCheck = (day: number) => async (e: SyntheticEvent<HTMLInputElement>) => {\n    const check = e.currentTarget.checked;\n    if (check && !days.includes(day)) {\n      setDays([...days, day])\n    } else {\n      setDays([...days.filter(d => d !== day)])\n    }\n  };\n\n  const eventHandler = (type: string) => (e: SyntheticEvent<HTMLInputElement>) => {\n    switch (type) {\n      case 'name': {\n        setName(e.currentTarget.value);\n        return\n      }\n      case 'price': {\n        const p = e.currentTarget.value;\n        if (/^[0-9]*$/.test(p)) {\n          console.log('!!!!', p);\n          setPrice(p);\n        }\n        return\n      }\n      case 'time': {\n        setTime(e.currentTarget.value);\n        return\n      }\n      case 'submit': {\n        sendEvents();\n        return\n      }\n    }\n  };\n\n  return (\n    <Panel id={p.id}>\n      <AppHeader active={p.id} isAdmin={isAdmin(p.user)} go={p.go}>\n        Новое Событие\n      </AppHeader>\n      <FormLayout>\n        <Input type=\"text\" top=\"Название\" value={name} onChange={eventHandler('name')} />\n        <Input type=\"number\" value={price+''} onChange={eventHandler('price')}/>\n        <Input type=\"time\" top=\"Время\" value={time} onChange={eventHandler('time')}/>\n        <FormLayoutGroup top=\"Повторять каждую неделю\">\n          <Checkbox checked={days.includes(0)} onChange={onCheck(0)}>Пн</Checkbox>\n          <Checkbox checked={days.includes(1)} onChange={onCheck(1)}>Вт</Checkbox>\n          <Checkbox checked={days.includes(2)} onChange={onCheck(2)}>Ср</Checkbox>\n          <Checkbox checked={days.includes(3)} onChange={onCheck(3)}>Чт</Checkbox>\n          <Checkbox checked={days.includes(4)} onChange={onCheck(4)}>Пт</Checkbox>\n          <Checkbox checked={days.includes(5)} onChange={onCheck(5)}>Сб</Checkbox>\n          <Checkbox checked={days.includes(6)} onChange={onCheck(6)}>Вс</Checkbox>\n        </FormLayoutGroup>\n        <Button size=\"xl\" onClick={eventHandler('submit')}>Добавить</Button>\n      </FormLayout>\n      <Cell>\n        <Div>{JSON.stringify({price, name, time, days})}</Div>\n      </Cell>\n    </Panel>\n  );\n};\n\nexport default AddEventsAdmin;\n","// @flow\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport { Epic, View } from \"@vkontakte/vkui\";\nimport { Panel, PanelHeader } from \"@vkontakte/vkui\";\n\nimport type { VkConnectEvent, VKWebAppGetUserInfoResult } from \"./types/vk\";\nimport EventFlow                                          from \"./panels/events/event-flow/EventFlow\";\nimport EventsAdmin                                        from \"./panels/events/admin/list/EventsAdmin\";\nimport AppTabbar                                          from \"./companents/menu/AppTabbar\";\nimport AddEventsAdmin                                     from \"./panels/events/admin/add/AddEventsAdmin\";\n\ntype Props = {};\n\nconst App = (p: Props) => {\n  const [activePanel, setActivePanel] = useState(\"events-feed\");\n  const [activeStory, setActiveStory] = useState(\"events\");\n  const [currentUser, setCurrentUser] = useState<?VKWebAppGetUserInfoResult>(\n    null\n  );\n  const [token, setToken] = useState<?string>(null);\n\n  useEffect(() => {\n    connect.subscribe((e: VkConnectEvent) => {\n      switch (e.detail.type) {\n        case \"VKWebAppGetUserInfoResult\":\n          setCurrentUser(e.detail.data);\n          break;\n        case \"VKWebAppAccessTokenReceived\":\n          setToken(e.detail.data.access_token);\n          break;\n        default:\n        //console.log(e);\n      }\n    });\n    connect.send(\"VKWebAppGetUserInfo\", {});\n  }, []);\n\n  return (\n    <Epic\n      activeStory={activeStory}\n      tabbar={<AppTabbar active={activeStory} go={setActiveStory} />}\n    >\n      <View id=\"events\" activePanel={activePanel}>\n        <EventFlow id=\"events-feed\" user={currentUser} go={setActivePanel} />\n        <EventsAdmin id=\"events-admin\" token={token} user={currentUser} go={setActivePanel} />\n        <AddEventsAdmin id=\"add-events-admin\" token={token} user={currentUser} go={setActivePanel} />\n      </View>\n      <View id=\"user\" activePanel=\"user-main\">\n        <Panel id=\"user-main\">\n          <PanelHeader>Кабинет</PanelHeader>\n        </Panel>\n      </View>\n    </Epic>\n  );\n};\n\nexport default App;\n","// @flow\n\n// Styles\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React                                       from 'react';\nimport ReactDOM                                    from 'react-dom';\nimport connect                                     from '@vkontakte/vkui-connect';\nimport { library }                                 from '@fortawesome/fontawesome-svg-core'\nimport { faCircleNotch, faRss, faUser, faUserCog } from \"@fortawesome/free-solid-svg-icons\";\nimport App                                         from './App';\n\nlibrary.add(faCircleNotch, faUserCog, faUser, faRss);\n\nconnect.send('VKWebAppInit', {});\n\nconst root = document.getElementById('root');\nif (root) {\n  ReactDOM.render(<App />, root);\n}\n"],"sourceRoot":""}