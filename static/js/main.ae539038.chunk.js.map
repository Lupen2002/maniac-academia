{"version":3,"sources":["utils/index.js","panels/events/components/stub/Stub.jsx","utils/admin/index.js","panels/events/components/header/AppHeaderIcon.jsx","panels/events/components/header/AppHeader.jsx","panels/events/event-flow/EventFlow.jsx","panels/events/admin/EventsAdmin.jsx","companents/menu/AppTabbar.jsx","App.js","index.js"],"names":["bemHelper","name","BEMHelper","prefix","modifierDelimiter","outputIsString","bem","Stub","react","react_fontawesome_index_es","Object","assign","icon","spin","size","isAdmin","user","env","process","adminId","REACT_APP_ADMIN_USER_ID","id","parseInt","AppHeaderIcon","p","props","AppHeader","_useState","useState","_useState2","slicedToArray","isOpenHeadContext","setOpenHeadContext","dist_vkui","aside","dropdown_default","a","onClick","children","opened","onClose","go","asideContent","active","done_default","fill","before","header_AppHeaderIcon","EventFlow","centered","header_AppHeader","stub_Stub","EventsAdmin","connect","send","app_id","scope","subscribe","e","add_default","AppTabbar","selected","data-story","text","newsfeed_default","user_default","App","activePanel","setActivePanel","_useState3","_useState4","activeStory","setActiveStory","_useState5","_useState6","currentUser","setCurrentUser","_useState7","_useState8","setToken","useEffect","detail","type","data","access_tokean","tabbar","menu_AppTabbar","event_flow_EventFlow","admin_EventsAdmin","library","add","faCircleNotch","faUserCog","faUser","faRss","root","document","getElementById","ReactDOM","render","react_default","createElement","src_App"],"mappings":"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","file":"static/js/main.ae539038.chunk.js","sourcesContent":["// @flow\n\nimport BEMHelper from \"react-bem-helper\";\n\nexport const bemHelper = (name: string) => {\n  return new BEMHelper({\n                         name,\n                         prefix           : \"\",\n                         modifierDelimiter: \"_\",\n                         outputIsString   : false\n                       })\n};","// @flow\n\nimport './styles.scss'\n\nimport * as React               from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { bemHelper }       from \"../../../../utils\";\n\nconst bem = bemHelper(\"stub\");\n\n\nconst Stub = () => {\n  return (\n    <div {...bem()}>\n      <FontAwesomeIcon {...bem(\"spinner\")} icon=\"circle-notch\" spin size=\"4x\" />\n    </div>\n  );\n};\n\nexport default Stub;\n","// @flow\n\nimport type { VKWebAppGetUserInfoResult } from \"../../types/vk\";\n\nexport const isAdmin = (user: ?VKWebAppGetUserInfoResult) => {\n  const env = process.env;\n  if ('REACT_APP_ADMIN_USER_ID' in env) {\n    const adminId = env.REACT_APP_ADMIN_USER_ID;\n    return !!user && !!adminId && user.id === parseInt(adminId)\n  }\n  return false\n};","// @flow\n\nimport * as React          from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BEMHelper           from \"react-bem-helper\";\nimport { IconProp }        from \"@fortawesome/fontawesome-svg-core\";\n\ntype Props = {\n  icon: IconProp,\n  bem?: BEMHelper\n};\n\nconst AppHeaderIcon = (p: Props) => {\n  const props = !!p.bem ? p.bem(\"header-context-menu-icon\", \"\", \"Icon\") : {};\n  return (\n    <span {...props}>\n      <FontAwesomeIcon icon={p.icon} />\n    </span>\n  );\n};\n\nexport default AppHeaderIcon;\n","// @flow\nimport \"./styles.scss\";\n\nimport * as React from \"react\";\nimport {\n  Cell,\n  HeaderContext,\n  List,\n  PanelHeader,\n  PanelHeaderContent\n} from \"@vkontakte/vkui\";\nimport Icon16Dropdown from \"@vkontakte/icons/dist/16/dropdown\";\nimport Icon24Done from \"@vkontakte/icons/dist/24/done\";\nimport { bemHelper } from \"../../../../utils\";\nimport { useState } from \"react\";\nimport AppHeaderIcon from \"./AppHeaderIcon\";\n\nconst bem = bemHelper(\"app-header\");\n\ntype Props = {\n  active: string,\n  children?: React.Node,\n  isAdmin?: boolean,\n  go: string => any\n};\n\nconst AppHeader = (p: Props) => {\n  const [isOpenHeadContext, setOpenHeadContext] = useState(false);\n\n  return (\n    <>\n      <PanelHeader>\n        {p.isAdmin ? (\n          <PanelHeaderContent\n            aside={<Icon16Dropdown />}\n            onClick={() => setOpenHeadContext(!isOpenHeadContext)}\n          >\n            {p.children}\n          </PanelHeaderContent>\n        ) : (\n          p.children\n        )}\n      </PanelHeader>\n      {p.isAdmin && (\n        <HeaderContext opened={isOpenHeadContext} onClose={() => {}}>\n          <List>\n            <Cell\n              onClick={() => p.go(\"events-feed\")}\n              asideContent={\n                p.active === \"events-feed\" ? (\n                  <Icon24Done fill=\"var(--accent)\" />\n                ) : null\n              }\n              before={<AppHeaderIcon bem={bem} icon=\"rss\" />}\n            >\n              Расписание\n            </Cell>\n            <Cell\n              onClick={() => p.go(\"events-admin\")}\n              before={<AppHeaderIcon bem={bem} icon=\"user-cog\" />}\n              asideContent={\n                p.active === \"events-admin\" ? (\n                  <Icon24Done fill=\"var(--accent)\" />\n                ) : null\n              }\n            >\n              Администрирование\n            </Cell>\n          </List>\n        </HeaderContext>\n      )}\n    </>\n  );\n};\n\nexport default AppHeader;\n","// @flow\nimport \"./styles.scss\";\n\nimport * as React                         from \"react\";\nimport { Panel, Group, Div }              from \"@vkontakte/vkui\";\nimport type { VKWebAppGetUserInfoResult } from \"../../../types/vk\";\nimport Stub                               from \"../components/stub/Stub\";\nimport { isAdmin }                        from \"../../../utils/admin\";\nimport { bemHelper }                      from \"../../../utils\";\nimport AppHeader                          from \"../components/header/AppHeader\";\n\nconst bem = bemHelper(\"event-flow\");\n\ntype Props = {\n  id: string,\n  user: ?VKWebAppGetUserInfoResult,\n  go: string => any\n};\n\nconst EventFlow = (p: Props) => {\n\n  return (\n    <>\n      <Panel id={p.id} centered={!p.user}>\n        <AppHeader active={p.id} isAdmin={isAdmin(p.user)}  go={p.go}>\n          Расписание\n        </AppHeader>\n        {!p.user && <Stub />}\n        {isAdmin(p.user) && (\n          <Group>\n            <Div>Admin</Div>\n          </Group>\n        )}\n        {p.user && !isAdmin(p.user) && (\n          <Group>\n            <Div>User</Div>\n          </Group>\n        )}\n      </Panel>\n    </>\n  );\n};\n\nexport default EventFlow;\n","// @flow\n\nimport * as React from \"react\";\nimport { bemHelper } from \"../../../utils\";\nimport type { VKWebAppGetUserInfoResult } from \"../../../types/vk\";\nimport { Panel, Group, CellButton } from \"@vkontakte/vkui\";\nimport { isAdmin } from \"../../../utils/admin\";\nimport AppHeader from \"../components/header/AppHeader\";\nimport Icon24Add from \"@vkontakte/icons/dist/24/add\";\nimport connect from \"@vkontakte/vkui-connect\";\n\nconst bem = bemHelper(\"admin-main\");\n\ntype Props = {\n  id: string,\n  user: ?VKWebAppGetUserInfoResult,\n  go: string => any\n};\n\nconst EventsAdmin = (p: Props) => {\n  p.user && connect.send(\"VKWebAppGetAuthToken\", {\"app_id\": 7062331, \"scope\": \"groups,stats\"});\n  connect.subscribe(\"VKWebAppAccessTokenReceived\", (e: any) => {\n\n  });\n  return (\n    <Panel id={p.id}>\n      <AppHeader active={p.id} isAdmin={isAdmin(p.user)} go={p.go}>\n        События-Настройки\n      </AppHeader>\n      <Group>\n        <CellButton before={<Icon24Add />}>Добавить новое событие</CellButton>\n      </Group>\n    </Panel>\n  );\n};\n\nexport default EventsAdmin;\n","// @flow\n\nimport * as React             from \"react\";\nimport { TabbarItem, Tabbar } from \"@vkontakte/vkui\";\nimport NewsfeedIcon           from \"@vkontakte/icons/dist/28/newsfeed\";\nimport UserIcon               from \"@vkontakte/icons/dist/28/user.js\";\n\ntype Props = {\n  active: string,\n  go: string => any\n}\n\nconst AppTabbar = (p: Props) => {\n  return (\n    <Tabbar>\n      <TabbarItem\n        onClick={() => p.go('events')}\n        selected={p.active === 'events'}\n        data-story=\"events\"\n        text=\"События\"\n      >\n        <NewsfeedIcon />\n      </TabbarItem>\n      <TabbarItem\n        onClick={() => p.go('user')}\n        selected={p.active === 'user'}\n        data-story=\"users\"\n        text=\"Личный кабинет\"\n      >\n        <UserIcon />\n      </TabbarItem>\n    </Tabbar>\n  );\n};\n\nexport default AppTabbar","// @flow\n\nimport * as React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport connect from \"@vkontakte/vkui-connect\";\nimport { Epic, View } from \"@vkontakte/vkui\";\nimport { Panel, PanelHeader } from \"@vkontakte/vkui\";\n\nimport type { VkConnectEvent, VKWebAppGetUserInfoResult } from \"./types/vk\";\nimport EventFlow                                          from \"./panels/events/event-flow/EventFlow\";\nimport EventsAdmin                                        from \"./panels/events/admin/EventsAdmin\";\nimport AppTabbar                                          from \"./companents/menu/AppTabbar\";\n\ntype Props = {};\n\nconst App = (p: Props) => {\n  const [activePanel, setActivePanel] = useState(\"events-feed\");\n  const [activeStory, setActiveStory] = useState(\"events\");\n  const [currentUser, setCurrentUser] = useState<?VKWebAppGetUserInfoResult>(\n    null\n  );\n  const [token, setToken] = useState<?string>(null);\n\n  useEffect(() => {\n    connect.subscribe((e: VkConnectEvent) => {\n      switch (e.detail.type) {\n        case \"VKWebAppGetUserInfoResult\":\n          setCurrentUser(e.detail.data);\n          break;\n        case \"VKWebAppAccessTokenReceived\":\n          setToken(e.detail.data.access_tokean);\n          break;\n        default:\n        //console.log(e);\n      }\n    });\n    connect.send(\"VKWebAppGetUserInfo\", {});\n  }, []);\n\n  return (\n    <Epic\n      activeStory={activeStory}\n      tabbar={<AppTabbar active={activeStory} go={setActiveStory} />}\n    >\n      <View id=\"events\" activePanel={activePanel}>\n        <EventFlow id=\"events-feed\" user={currentUser} go={setActivePanel} />\n        <EventsAdmin id=\"events-admin\" user={currentUser} go={setActivePanel} />\n      </View>\n      <View id=\"user\" activePanel=\"user-main\">\n        <Panel id=\"user-main\">\n          <PanelHeader>Кабинет</PanelHeader>\n        </Panel>\n      </View>\n    </Epic>\n  );\n};\n\nexport default App;\n","// @flow\n\n// Styles\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React                                       from 'react';\nimport ReactDOM                                    from 'react-dom';\nimport connect                                     from '@vkontakte/vkui-connect';\nimport { library }                                 from '@fortawesome/fontawesome-svg-core'\nimport { faCircleNotch, faRss, faUser, faUserCog } from \"@fortawesome/free-solid-svg-icons\";\nimport App                                         from './App';\n\nlibrary.add(faCircleNotch, faUserCog, faUser, faRss);\n\nconnect.send('VKWebAppInit', {});\n\nconst root = document.getElementById('root');\nif (root) {\n  ReactDOM.render(<App />, root);\n}\n"],"sourceRoot":""}